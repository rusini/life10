-- life.manool2.mnl -- Conway's Game of Life in (planned) MANOOL-2

{ {extern "manool.org.18/std/2.0/all"} in
: let N = 40; M = 80 in
: let G = 66000 in

: let
  { Display =
    { proc S; B as
      S.as[Stream]; B.as[{grid 2 I8}]
      {assert (Size[B; 0] == N) & (Size[B; 1] == M)}
    : for I = Range[N]$ do
    : do S.WriteLine[] after
    : for J = Range[M]$ do
      S.Write[{if B[I; J] <> 0 then "*" else " "}]
    }
  }
  in

: var B = {grid 2 I8}.Repeat[N; M; 0] in
  -- initialization
  B[19; 41] = 1
  B[20; 40] = 1
  B[21; 40] = 1
  B[22; 40] = 1
  B[22; 41] = 1
  B[22; 42] = 1
  B[22; 43] = 1
  B[19; 44] = 1
  -- end of initialization
  Out.WriteLine["Before:"]; Out.Display[B]

  { var NextB = B in
  : repeat G do
  : do {assign B = NextB; NextB = B} after
  : for I = Range[N]$ do
  : var Up = {if I <> 0 then I - 1 else (N - 1)$}; Down = {if I <> (N - 1)$ then I + 1 else 0} in
  : for J = Range[M]$ do
  : var Left = {if J <> 0 then J - 1 else (M - 1)$}; Right = {if J <> (M - 1)$ then J + 1 else 0} in
  : var
    Count =
    B[Up  ; Left ] +
    B[Up  ; J    ] +
    B[Up  ; Right] +
    B[I   ; Right] +
    B[Down; Right] +
    B[Down; J    ] +
    B[Down; Left ] +
    B[I   ; Left ]
    in
    NextB[I; J] =
    { if Count == 2 then B[I; J] else
    : if Count == 3 then 1 else
      0
    }
  }
  Out.WriteLine["After " G " generations:"]; Out.Display[B]
}
